package com.ebay.search.qu;

import java.io.*;

import org.apache.commons.codec.binary.Base64;
import com.ebay.cassini.common.exceptions.SBEException;
import com.ebay.cassini.query.api.core.SingleQuery;
import com.ebay.cassini.query.api.core.QueryInputContainer;
import com.ebay.cassini.query.api.service.QueryApi;
import com.ebay.cassini.query.api.service.QueryRequest;
import com.ebay.cassini.query.api.service.QueryResponse;
import com.ebay.cassini.query.api.service.QueryService;
import com.ebay.cassini.query.api.service.RequestProcessor;
import com.ebay.cassini.query.impl.serviceimpl.QueryApiManager;

public class FireflyParser {

    private FireflyParser() {
    }

    static void quietlyClose(InputStream is) 
    {
        try {
            is.close();
        }
        catch (Throwable t) {
        }
    }


    static void quietlyClose(Reader r) 
    {
        try {
            r.close();
        }
        catch (Throwable t) {
        }
    }


    private static QueryApi ms_api = null;

    static {
        String configFilePath = "no_mds_api_config.json";

        InputStream is = null;
        try {
            // configFilePath is the full file path to the test_config.json file.
            is = com.ebay.search.util.CommonUtils.accessFile(configFilePath);

            // Create QueryApi from the input stream.
            ms_api = QueryApiManager.createQueryApi(is);

            String szClassFilePath = new File(FireflyParser.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getPath().toString();
            System.out.println("szClassFilePath " + szClassFilePath);
        }
        catch (Throwable t) {
        }
        finally {
            quietlyClose(is);
        }

    }


    public static String getQuery(String base64, int pos) 
    {
        try {
            Base64RequestProcessor p = new Base64RequestProcessor(base64);
            StringBuilder sb = new StringBuilder();
            p.set(pos, sb);

            // This calls the "populateRequest" method of p only.
            // The request is not sent to Cassini.
            ms_api.populateRequest(p);
            return sb.toString();
        }
        catch (Throwable t) {
            t.printStackTrace(System.err);
            return "";
        }
    }


    /**
     * The implementation of the RequestProcessor which deserializes a base64 string
     * into a query container.
     */
    public static class Base64RequestProcessor implements RequestProcessor {

        private String base64Container;

        public Base64RequestProcessor(final String base64Container) {
            this.base64Container = base64Container;
        }

        int m_pos;
        StringBuilder m_sb = null;

        public void set(int pos, StringBuilder sb) {
            m_pos = pos;
            m_sb  = sb;
        }

        @Override
        public void populateRequest(QueryRequest req) throws SBEException {

            QueryInputContainer container = req.getQueryContainer();
            QueryService svc = req.getService();

            byte[] containerBlob = Base64.decodeBase64(base64Container);
            svc.deserializeQueryContainer(container, containerBlob);

            m_sb.append("ClientName=").append(req.getClientName()).append("\tUsecaseName=").append(req.getUsecaseName());
            if (m_pos >= 0) {
                m_sb.append("\tQ=").append(container.getQueryAndFlags(m_pos).getQuery());
            }
            else if (m_pos == -1 ) {
                m_sb.append("\tC=");
                for (int j = 0; j < container.size(); j++) {
                    m_sb.append("\tQ=").append(
                            container.getQueryAndFlags(j).getQuery().toString().replace('\n',' ').replace('\t',' '));
                }
            }
            else if (m_pos == -2 ) {
                m_sb.append("\tC=");
                for (int j = 0; j < container.size(); j++) {
                    m_sb.append("\tQ=");
                    SingleQuery sq = (SingleQuery) (container.getQueryAndFlags(j).getQuery());
                    m_sb.append("\tK").append(sq.getSubqueryCount());
                    if (sq.getSubqueryCount() > 0) {
                        try {
                            ByteArrayOutputStream baos = new ByteArrayOutputStream();
                            sq.prettyPrint(baos, 0 /* indentCount */);
                            baos.flush();
                            m_sb.append(baos.toString().replace('\n',' ').replace('\t',' '));

                            // for (int k = 0; k < sq.getSubqueryCount(); k++) {
                            //     m_sb.append("\t").append(
                            //        sq.getSubquery(k).toString().replace('\n',' ').replace('\t',' '));
                            // }
                        }
                        catch (Throwable t) {
                            // ignore IOException
                            m_sb.append("ERROR: " + t.toString());
                        }
                    }
                    else {
                        m_sb.append("\t").append(sq.toString());
                    }
                }
            }
            else {
                m_sb.append("\tC=");
                m_sb.append(
                    container.toString().replace('\t',' '));
            }


        }

        @Override
        public void processResponse(QueryRequest req, QueryResponse res) throws SBEException {
            // Do nothing. This method won't be called in api.processRequestUnexecuted.
        }
    }


    public static void main(String[] szArgs)
    {
        // The base64 representation of a query container.
        String base64Container = null;

        base64Container = "";
        System.out.println("Query at 0 = " + FireflyParser.getQuery(base64Container, 0));
        System.out.println("Query at -1 = " + FireflyParser.getQuery(base64Container, -1));
        System.out.println("Query at -2 = " + FireflyParser.getQuery(base64Container, -2));

        System.out.println("next"); System.out.flush();
        base64Container = "DkNTV0ZWMQAGAgAYY2Fzc2luaV9kZXYAAhRRdWVyeVRpbWUAFDE0MDMzMTMwOTMCAgACAAIAAAACACZpdGVtX2FjdGl2ZStzZWxsZXIAAAIQc2l0ZV9pZAACMAAAAgwicXVlcnlfZXhwcmVzc2lvbgAIYW5kAAQMQHF1ZXJ5X2V4cHJlc3Npb25fcmF3X3VzZXJfcXVlcnkAHnJhd191c2VyX3F1ZXJ5AAAAIGFwcGxlIGlwb2QgbmFubwAadGh1bmRlcnN0b25lAA4AHmhhc3ZhbHVlX2ludDY0AAQMPHF1ZXJ5X2V4cHJlc3Npb25fdGVybV9wYXlsb2FkACR0ZXJtX212YWx1ZV9pbnQ2NAAAACZpdGVtX2FjdGl2ZStzZWxsZXIAFGF0dHJpYnV0ZQAOggHYAdgBhgHCAegB5gEMNHF1ZXJ5X2V4cHJlc3Npb25fY29uc3RhbnQAGGNvbnN0X2ludDY0AAAACgIA3oEJAAAAAAAAAgIAAgACAADIAR5kZWZhdWx0X291dHB1dAAmaXRlbV9hY3RpdmUrc2VsbGVyAAAAAAICAAIACqgB0gHoAdgBygEOBBR0ZXJtX2Jsb2IAAAAmaXRlbV9hY3RpdmUrc2VsbGVyABRhdHRyaWJ1dGUACqgB0gHoAdgBygEAAAAAAAAC";
        System.out.println("Query at 0 = " + FireflyParser.getQuery(base64Container, 0));

        System.out.println("Query at -1 = " + FireflyParser.getQuery(base64Container, -1));

        System.out.println("Query at -2 = " + FireflyParser.getQuery(base64Container, -2));


        System.out.println("next"); System.out.flush();
        base64Container = "";
        base64Container = "";
        System.out.println("Query at 0 = " + FireflyParser.getQuery(base64Container, 0));

        System.out.println("Query at -1 = " + FireflyParser.getQuery(base64Container, -1));

        System.out.println("Query at -2 = " + FireflyParser.getQuery(base64Container, -2));
    }

}
